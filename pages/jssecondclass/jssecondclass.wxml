<view class="title">零、知识铺垫</view>
<view class="littletitle">1.什么是json？</view>
<view class="note">JSON(JavaScript Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式。</view>
<view class="note">就是一种数据格式，js中常用</view>
<view class="littletitle">2.三目运算</view>
<view class="note">表达式?'表达式正确时执行':'表达式错误时执行'</view>
<view class="littletitle">3.如何在wxml中访问js中data的数据</view>
<view class="note">双花括号包住欲访问数据名</view>
<view class="littletitle">4.wxml是如何调用js中的函数的</view>
<view class="note">首先，一些生命周期函数是自己执行，不需要手动调用。</view>
<view class="note">其他自定义的一些函数，通过在wxml中的某些活动变化中绑定函数名，来实现当这些活动变化发生时执行这些函数</view>
<view class="blank"></view>

<view class="title">一、表单提交</view>
<view class="littletitle">1.概述</view>
<view class="note">·表单提交是最为重要的一种交互方式</view>
<view class="note">·在表单标签中通过bindsubmit绑定表单提交函数</view>
<view class="note">·每一个表单中都至少有一个button来触发表单提交事件，在button标签中加入form-type="submit"来将其设定为提交按钮</view>
<view class="note"></view>
<view class="note">·下面这个实例仅展示表单部分组件，所有组件及其属性详见官方文档https://developers.weixin.qq.com/miniprogram/dev</view>
<view class="note">·每个组件都绑定了独一无二的name，以便提交表单后获取对应的数据</view>
<view class="littletitle">2.组件的具体介绍</view>
<view class="note">这里简单介绍组件的名称用法和返回值，具体的一些操作详见官方文档。</view>
<view class="note">1.input组件:文本输入框，提交用户输入的内容</view>
<view class="note">2.switch:开关选择器，返回bool值</view>
<view class="note">3.radio-group:单项选择器，返回选中radio的value</view>
<view class="note">4.picker：返回在选中range绑定的数组的元素的下标</view>
<form bindsubmit="formsubmit">
  <view class="formcontainer">
    <view class="formtitle">健康每日报</view>
    <input placeholder="请填写当日体温℃" name="_valueinput" placeholder-class="placeholderclass" class="inputclass"></input>
    <view class="switchbox">
      <view class="switchcontent">是否阅知xx通知</view>
      <switch name="_valueswitch" class="switchclass"></switch>
    </view>
    <view class="radiogrouptitle">当地的健康码颜色为</view>
    <radio-group name="_valueradiogroup">
      <view class="radiogroupcontainer">
        <radio class="groupradioclass" value="0"></radio>红色
        <radio class="groupradioclass" value="1"></radio>蓝色
        <radio class="groupradioclass" value="2"></radio>绿色
      </view>
    </radio-group>
    <view class="pickerbox">
      <view class="pickercontent">返校方式：</view>
      <picker name="_valuepicker" range="{{backmethodarr}}" class="pickerclass" bindchange="methodchange">{{backmethod}}        </picker>
    </view>
    <button form-type="submit" class="submitbtn">提交</button>
  </view>
</form>

<view wx:if="{{issubmit}}">
  <view class="littletitle">表单预览</view>
  <view class="note">当日体温为：{{formdata._valueinput}}</view>
  <view class="note">阅读xx通知：{{formdata._valueswitch?"yes":"no"}}</view>
  <view class="note">当地的健康码颜色为：{{codecolorarr[formdata._valueradiogroup]}}</view>
  <view class="note">返校方式：{{backmethodarr[formdata._valuepicker]}}</view>
</view>
<view class="note">↑一个栗子</view>
<view class="blank"></view>

<view class="title">二、知识点补充</view>
<view class="note">1.通过在标签中添加wx:if=""的方式来控制一个模块的显示与隐藏</view>
<view class="note">2.事实上不用表单也是可以与js数据交互的，例如上面picker中的bindchange，为bindchange绑定了一个函数methodchange，每当用户选择一次返校方式，都会触发这个函数。input组件也有一个bindinput事件，每当用户在输入框中输入数据，就调用bindinput绑定的js函数。类似的东西还有很多很多，这里就不一一列举了</view>
<view class="blank"></view>

<view class="title">三、任务</view>
<view class="littletitle">解决上面示例的不完善地方</view>
<view class="note">如果有未填项仍可提交</view>
<view class="note">无法检验input的内容是否合法</view>
<view class="note">input内容的输入长度没有限制</view>
<view class="note">没有输入错误提示</view>
<view class="blank"></view>
